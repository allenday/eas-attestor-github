# Google Cloud Run service configuration - Staging
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: eas-validator-staging
  labels:
    app: eas-validator
    env: staging
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
spec:
  template:
    metadata:
      labels:
        app: eas-validator
        env: staging
      annotations:
        # Scaling configuration (more conservative for staging)
        autoscaling.knative.dev/minScale: "0"
        autoscaling.knative.dev/maxScale: "5"
        
        # Resource allocation (minimum for Gen2 execution environment)
        run.googleapis.com/cpu: "1"
        run.googleapis.com/memory: "512Mi"
        run.googleapis.com/startup-cpu-boost: "true"
        
        # Networking (commented out - can be enabled if VPC connector is configured)
        # run.googleapis.com/vpc-access-connector: projects/PROJECT_ID/locations/REGION/connectors/CONNECTOR_NAME
        # run.googleapis.com/vpc-access-egress: private-ranges-only
        
        # Security
        run.googleapis.com/execution-environment: gen2
        run.googleapis.com/sandbox: gvisor
    spec:
      containerConcurrency: 50
      timeoutSeconds: 300
      serviceAccountName: cicd-github@PROJECT_ID.iam.gserviceaccount.com
      containers:
      - image: gcr.io/PROJECT_ID/eas-validator-staging:latest
        ports:
        - name: http1
          containerPort: 8080
        env:
        - name: NODE_ENV
          value: "staging"
        - name: NETWORK
          value: "CLOUD"
        - name: ENVIRONMENT
          value: "STAGING"
        - name: COMPONENT
          value: "VALIDATOR"
        - name: CONCERN
          value: "DEPLOY"
        - name: LOG_LEVEL
          value: "debug"
        - name: BWS_ACCESS_TOKEN
          value: "BWS_ACCESS_TOKEN_PLACEHOLDER"
        - name: BWS_PROJECT_ID
          value: "BWS_PROJECT_ID_PLACEHOLDER"
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6